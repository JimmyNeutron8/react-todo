{"version":3,"sources":["ListItem.js","App.js","index.js"],"names":["ListItem","react_default","a","createElement","className","this","props","onClick","value","React","Component","ClearButton","hasItems","type","disabled","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","items","textField","handleChange","bind","assertThisInitialized","handleSubmit","handleComplete","handleClear","e","setState","target","preventDefault","trim","newItems","slice","push","text","status","index","filter","item","_this2","onSubmit","onChange","placeholder","map","src_ListItem","threshold","key","length","ReactDOM","render","src_App","document","querySelector"],"mappings":"mMAeeA,mLAXX,OACEC,EAAAC,EAAAC,cAAA,OACEC,UAAWC,KAAKC,MAAMF,UACtBG,QAASF,KAAKC,MAAMC,SAEpBN,EAAAC,EAAAC,cAAA,SAAIE,KAAKC,MAAME,eAPAC,IAAMC,WC8E7B,SAASC,EAAaL,GACpB,OAAIA,EAAMM,SACDX,EAAAC,EAAAC,cAAA,SAAOI,QAASD,EAAMC,QAASM,KAAK,SAASL,MAAM,0BAEnDP,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAASL,MAAM,wBAAwBM,UAAQ,IAIvDC,kBApFb,SAAAA,EAAaT,GAAO,IAAAU,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAZ,KAAAU,IAClBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAhB,KAAMC,KAEDgB,MAAQ,CACXC,MAAO,GACPC,UAAW,IAGbR,EAAKS,aAAeT,EAAKS,aAAaC,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IACpBA,EAAKY,aAAeZ,EAAKY,aAAaF,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IACpBA,EAAKa,eAAiBb,EAAKa,eAAeH,KAApBT,OAAAU,EAAA,EAAAV,CAAAD,IACtBA,EAAKc,YAAcd,EAAKc,YAAYJ,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IAXDA,4EAcNe,GACZ1B,KAAK2B,SAAS,CACZR,UAAWO,EAAEE,OAAOzB,6CAIVuB,GAEZ,GADAA,EAAEG,iBACkC,KAAhC7B,KAAKiB,MAAME,UAAUW,OAAzB,CAGA,IAAIC,EAAW/B,KAAKiB,MAAMC,MAAMc,QAChCD,EAASE,KAAK,CACZC,KAAMlC,KAAKiB,MAAME,UACjBgB,OAAQ,eAEVnC,KAAK2B,SAAS,CACZT,MAAOa,EACPZ,UAAW,6CAICiB,GACd,IAAIL,EAAW/B,KAAKiB,MAAMC,MAAMc,QACD,eAA3BD,EAASK,GAAOD,OAClBJ,EAASK,GAAOD,OAAS,WAEzBJ,EAASK,GAAOD,OAAS,aAE3BnC,KAAK2B,SAAS,CACZT,MAAOa,0CAKT,IAAIA,EAAW/B,KAAKiB,MAAMC,MAAMc,QAChCD,EAAWA,EAASM,OAAO,SAAAC,GACzB,MAAuB,eAAhBA,EAAKH,SAEdnC,KAAK2B,SAAS,CACZT,MAAOa,qCAID,IAAAQ,EAAAvC,KACR,OACEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAM0C,SAAUxC,KAAKuB,cACnB3B,EAAAC,EAAAC,cAAA,SAAOU,KAAK,OAAOL,MAAOH,KAAKiB,MAAME,UAAWsB,SAAUzC,KAAKoB,aAAcsB,YAAY,oBACzF9C,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAASL,MAAM,cAE7BP,EAAAC,EAAAC,cAAA,WACGE,KAAKiB,MAAMC,MAAMyB,IAAI,SAACL,EAAMF,GAAP,OACpBxC,EAAAC,EAAAC,cAAC8C,EAAD,CAAUC,UAAW,GAAK3C,QAAS,kBAAMqC,EAAKf,eAAeY,IAAQrC,UAAWuC,EAAKH,OAAQW,IAAKV,EAAOjC,MAAOmC,EAAKJ,UAGzHtC,EAAAC,EAAAC,cAACQ,EAAD,CAAaJ,QAASF,KAAKyB,YAAalB,SAAUP,KAAKiB,MAAMC,MAAM6B,OAAS,YAvElE1C,mBCElB2C,IAASC,OACPrD,EAAAC,EAAAC,cAACoD,EAAD,MACAC,SAASC,cAAc","file":"static/js/main.22b9074f.chunk.js","sourcesContent":["import React from 'react';\n\nclass ListItem extends React.Component {\n  render () {\n    return (\n      <div\n        className={this.props.className}\n        onClick={this.props.onClick}\n      >\n        <p>{this.props.value}</p>\n      </div>\n    );\n  }\n}\n\nexport default ListItem;\n","import React, { Component } from 'react';\nimport ListItem from './ListItem';\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      items: [],\n      textField: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleComplete = this.handleComplete.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n  }\n\n  handleChange (e) {\n    this.setState({\n      textField: e.target.value\n    });\n  }\n\n  handleSubmit (e) {\n    e.preventDefault();\n    if (this.state.textField.trim() === '') {\n      return;\n    }\n    let newItems = this.state.items.slice();\n    newItems.push({\n      text: this.state.textField,\n      status: 'incomplete'\n    });\n    this.setState({\n      items: newItems,\n      textField: ''\n    });\n  }\n\n  handleComplete (index) {\n    let newItems = this.state.items.slice();\n    if (newItems[index].status === 'incomplete') {\n      newItems[index].status = 'complete';\n    }else{\n      newItems[index].status = 'incomplete';\n    }\n    this.setState({\n      items: newItems\n    });\n  }\n\n  handleClear () {\n    let newItems = this.state.items.slice();\n    newItems = newItems.filter(item => {\n      return item.status === 'incomplete'\n    });\n    this.setState({\n      items: newItems\n    });\n  }\n\n  render () {\n    return (\n      <div className=\"todo-list\">\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" value={this.state.textField} onChange={this.handleChange} placeholder=\"Add new item...\" />\n          <input type=\"submit\" value=\"Add Item\" />\n        </form>\n        <div>\n          {this.state.items.map((item, index) => (\n            <ListItem threshold={0.5} onClick={() => this.handleComplete(index)} className={item.status} key={index} value={item.text} />\n          ))}\n        </div>\n        <ClearButton onClick={this.handleClear} hasItems={this.state.items.length > 0} />\n      </div>\n    );\n  }\n}\n\nfunction ClearButton (props) {\n  if (props.hasItems) {\n    return <input onClick={props.onClick} type=\"button\" value=\"Clear Completed Items\" />;\n  }else{\n    return <input type=\"button\" value=\"Clear Completed Items\" disabled />;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}